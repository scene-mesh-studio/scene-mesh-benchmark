let message = "请根据以下 Flink CEP 规则和事件元数据规范，生成测试事件数据：\n\n";
message = message + "## Flink CEP 规则\n";
message = message + "```json\n";
message = message + "#{cepRule}\n";
message = message + "```\n\n";

message = message + "## 事件元数据规范 (metaEvents)\n";
message = message + "```json\n";
message = message + "[\n";
let first = true;
for metaEvent in metaEvents {
    if (!first) {
        message = message + ",\n";
    }
    first = false;
    message = message + "  {\n";
    message = message + "    \"type\": \"" + metaEvent.uuid + "\",\n";
    message = message + "    \"name\": \"" + metaEvent.name + "\",\n";
    message = message + "    \"description\": \"" + metaEvent.description + "\",\n";
    message = message + "    \"productId\": \"" + metaEvent.productId + "\",\n";
    message = message + "    \"parameters\": [\n";
    let firstParam = true;
    for param in metaEvent.parameterCollection.parameterDescriptors {
        if (!firstParam) {
            message = message + ",\n";
        }
        firstParam = false;
        message = message + "      {\n";
        message = message + "        \"name\": \"" + param.name + "\",\n";
        message = message + "        \"title\": \"" + param.title + "\",\n";
        message = message + "        \"description\": \"" + param.description + "\",\n";
        message = message + "        \"dataType\": \"" + param.dataType + "\",\n";
        message = message + "        \"required\": " + param.required + "\n";
        message = message + "      }";
    }
    message = message + "\n    ]\n";
    message = message + "  }";
}
message = message + "\n]\n";
message = message + "```\n\n";

message = message + "## 测试模式: #{testMode}\n";
message = message + "#{testModeDescription}\n\n";

message = message + "## 任务要求\n";
message = message + "请根据上述 CEP 规则和事件元数据规范，智能决定事件数量并生成相应的测试事件数据。\n";
message = message + "- 事件应该能够有效测试 CEP 规则的各种场景\n";
message = message + "- 事件应该有意义，不允许无意义的事件生成\n";
message = message + "- 数据值应该具有随机性，覆盖不同的测试场景\n\n";

message = message + "**重要提示：请严格按照以下要求输出：**\n";
message = message + "1. 直接输出 JSON 数组格式，不要添加任何解释文字\n";
message = message + "2. 每个事件包含 type 和 payload 字段\n";
message = message + "3. 输出完成后立即停止，不要继续对话\n";
message = message + "4. 确保 JSON 格式正确，可以被解析\n\n";
message = message + "请开始生成测试事件数据：";
return message;
