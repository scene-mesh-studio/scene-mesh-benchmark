# Scene Mesh Benchmark 配置
scene-mesh:
  benchmark:
    # 默认测试超时时间（毫秒）
    default-timeout-ms: 30000
    # 默认重试次数
    default-retry-count: 0
    # 默认并发数
    default-concurrency: 1
    # 是否启用断言
    enable-assertion: true
    # 是否启用性能监控
    enable-performance-monitoring: false
    # 测试报告输出路径
    report-output-path: ./test-reports
    # 测试数据路径
    test-data-path: ./test-data
    # 性能阈值配置
    performance-threshold:
      # 最大响应时间（毫秒）
      max-response-time-ms: 5000
      # 最大内存使用（MB）
      max-memory-usage-mb: 512
      # 最大CPU使用率（百分比）
      max-cpu-usage-percent: 80.0
  infrastructure:
    redis:
      host: 127.0.0.1
      port: 6379
  facade:
    url:
      mqtt: mqtt://127.0.0.1:1883
      websocket: ws://127.0.0.1:8888
spring:
  application:
    name: scene-mesh-benchmark
  profiles:
    active: dev
  main:
    web-application-type: none
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

# 日志配置
logging:
  level:
    com.scene.mesh.benchmark: DEBUG
    com.scene.mesh.service: INFO
    com.scene.mesh.model: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/scene-mesh-benchmark.log
